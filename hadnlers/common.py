from aiogram import Router, types, F
from aiogram.filters.command import Command
from less3.utils.random_fox import fox
from less3.keybords.keyboards import kb1, kb2
from random import randint


router = Router()


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command("start"))
async def send_welcome(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç! {name} –Ø —ç—Ö–æ–±–æ—Ç –Ω–∞ aiogram 3.'\
                        '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –ø–æ–≤—Ç–æ—Ä—é –µ–≥–æ,', reply_markup = kb1)


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /info
@router.message(Command("info"))
async def info(message: types.Message):
    await message.answer("–Ø –Ω–æ–≤—ã–π –±–æ—Ç")


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /user
@router.message(Command("user"))
async def echo(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, polzavatel')

#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command("stop"))
async def stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}')


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command("fox"))
@router.message(Command("–ª–∏—Å–∞"))
@router.message(F.text.lower() == "–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É")
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}')
    await message.answer_photo(photo = img_fox)
    #await bot.send_photo(message.from_user.id, photo = img_fox)


@router.message(F.text.lower() == 'num')
async def send_random(message: types.Message):
    number = randint(1, 10)
    await message.answer(f'{number}')


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' in msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}')
    elif '—Ç—ã –∫—Ç–æ' in msg_user:
        await message.answer_dice(emoji='üé≤')
    elif '–ª–∏—Å–∞' in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}', reply_markup = kb2)
    elif '/prof' in msg_user:
        await message.answer_dice(emoji='üé≤')
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')


#1 usage
async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())